# 文件夹名称 ｜ levels 文件夹层级 ｜ keys_zone url 对应的缓存以及大小
proxy_cache_path cache levels=1:2 keys_zone=my_cache:10m;

server {
  listen      80;
  server_name test.com;

  location / {
    # 配置缓存
    proxy_cache my_cache;
    proxy_pass http://127.0.0.1:8888;
    # 可能会有多个 url 同时代理，host 用以区分
    proxy_set_header Host $host;
  }
}

# 重定向
server {
  listen      80 default_server;
  listen      [::]:80 default_server;
  server_name a.test.com;
  return 302 https://$server_name$request_uri;
}

server {
  # ssl
  listen      443 ssl http2;
  server_name a.test.com;
  http2_push_preload on;

  # [证书生成命令](https://gist.github.com/Jokcy/5e73fd6b2a9b21c142ba2b1995150808)
  # openssl req -x509 -newkey rsa:2048 -nodes -sha256 -keyout localhost-privkey.pem -out localhost-cert.pem
  ssl_certificate_key /opt/homebrew/Cellar/nginx/1.21.6_1/certs/localhost-privkey.pem;
  ssl_certificate /opt/homebrew/Cellar/nginx/1.21.6_1/certs/localhost-cert.pem;

  location / {
    proxy_cache my_cache;
    proxy_pass http://127.0.0.1:8888;
    proxy_set_header Host $host;
    add_header Strict-Transport-Security max-age=200;
  }
}
